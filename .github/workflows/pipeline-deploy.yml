name: Pipeline Deploy
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  REPOSITORY_NAME: 'ff-order'
  IMAGE: 'app'
  IMAGE_TAG: 'latest'
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}

jobs:
  pipeline-deploy:
    name: Setup, Build, Publish and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure GCP credentials
        uses: google-github-actions/setup-gcloud@v2.1.0
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Authenticate GCP
        uses: google-github-actions/auth@v2.1.2
        with:
          credentials_json: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Docker configuration
        run: |
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2.1.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.GCP_REGION }}

      - name: Build
        run: |
          docker build \
            --tag "$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPOSITORY_NAME/$IMAGE:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      - name: Push
        run: |
          docker push "$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPOSITORY_NAME/$IMAGE:$IMAGE_TAG"

      - name: Create Kubernetes Secret
        run: |
          echo "Creating Kubernetes Secret file..."
          echo "
          apiVersion: v1
          kind: Secret
          metadata:
            name: postgres-secret
          type: Opaque
          data:
            POSTGRES_USER: $(echo -n ${{ secrets.POSTGRES_USER }} | base64)
            POSTGRES_PASSWORD: $(echo -n ${{ secrets.POSTGRES_PASSWORD }} | base64)
            POSTGRES_DB: $(echo -n ${{ secrets.POSTGRES_DB }} | base64)
            POSTGRES_HOST: $(echo -n ${{ secrets.POSTGRES_HOST }} | base64)
            POSTGRES_PORT: $(echo -n ${{ secrets.POSTGRES_PORT }} | base64)
          " > postgres-secret.yaml

          kubectl apply -f postgres-secret.yaml

      - name: Deploy
        run: |-
          kubectl apply -f ./prod/deploy.yaml
          kubectl get pods

      - name: Get pods
        run: kubectl get pods
